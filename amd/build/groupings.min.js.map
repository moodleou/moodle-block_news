{"version":3,"file":"groupings.min.js","sources":["../src/groupings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module to provide grouping selection functionality.\n *\n * @module     block_news/groupings\n * @copyright  2017 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    var t = {\n\n        groupingSelect: null,\n        groupSelect: null,\n        allOption: null,\n\n\n        /**\n         * Setup for group IDs against relevant grouping options,\n         * and attach event listeners.\n         *\n         */\n        init: function() {\n            t.groupingSelect = $('#id_grouping');\n            t.groupSelect = $('#id_groupids');\n            t.allOption = t.groupSelect.find('option[value=\"0\"]');\n\n            t.groupingSelect.on('change', t.selectGroups);\n            t.groupSelect.on('change', t.clearGroupings);\n            $('#fitem_id_grouping').css('display', 'inline-block');\n        },\n\n        /**\n         * Fetch the groups linked in a grouping directly from the HTML Selector.\n         *\n         * @param {Event} e\n         */\n        selectGroups: function(e) {\n            var grouping = $(e.currentTarget).find('option:selected');\n            // Read data from the groupinggroups attribute of the element.\n            var groupingGroups = t.groupingSelect.data(\"groupinggroups\");\n            var groups = groupingGroups[grouping.val()];\n            t.groupSelect.val([]);\n            if (groups) {\n                groups.forEach(function(groupid) {\n                    t.groupSelect.find('option[value=\"' + groupid + '\"]').prop('selected', true);\n                });\n            }\n            if (t.groupSelect.find('option:selected').length === 0) {\n                t.allOption.prop('selected', true);\n            } else {\n                t.allOption.prop('selected', false);\n            }\n        },\n\n        /**\n         * Set the Grouping select to blank, if the \"all groups\" option is selected, unselect other groups as well.\n         */\n        clearGroupings: function() {\n            if (t.allOption.prop('selected')) {\n                t.groupSelect.val(['0']);\n            }\n            t.groupingSelect.val(['0']);\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","t","groupingSelect","groupSelect","allOption","init","find","on","selectGroups","clearGroupings","css","e","grouping","currentTarget","groups","data","val","forEach","groupid","prop","length"],"mappings":";;;;;;;AAsBAA,8BAAO,CAAC,WAAW,SAASC,OACpBC,EAAI,CAEJC,eAAgB,KAChBC,YAAa,KACbC,UAAW,KAQXC,KAAM,WACFJ,EAAEC,eAAiBF,EAAE,gBACrBC,EAAEE,YAAcH,EAAE,gBAClBC,EAAEG,UAAYH,EAAEE,YAAYG,KAAK,qBAEjCL,EAAEC,eAAeK,GAAG,SAAUN,EAAEO,cAChCP,EAAEE,YAAYI,GAAG,SAAUN,EAAEQ,gBAC7BT,EAAE,sBAAsBU,IAAI,UAAW,iBAQ3CF,aAAc,SAASG,OACfC,SAAWZ,EAAEW,EAAEE,eAAeP,KAAK,mBAGnCQ,OADiBb,EAAEC,eAAea,KAAK,kBACfH,SAASI,OACrCf,EAAEE,YAAYa,IAAI,IACdF,QACAA,OAAOG,SAAQ,SAASC,SACpBjB,EAAEE,YAAYG,KAAK,iBAAmBY,QAAU,MAAMC,KAAK,YAAY,MAG1B,IAAjDlB,EAAEE,YAAYG,KAAK,mBAAmBc,OACtCnB,EAAEG,UAAUe,KAAK,YAAY,GAE7BlB,EAAEG,UAAUe,KAAK,YAAY,IAOrCV,eAAgB,WACRR,EAAEG,UAAUe,KAAK,aACjBlB,EAAEE,YAAYa,IAAI,CAAC,MAEvBf,EAAEC,eAAec,IAAI,CAAC,eAIvBf"}